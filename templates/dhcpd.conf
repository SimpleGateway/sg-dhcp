authoritative;

{% for interface in sg_network %}
{% if "dhcp" in interface.services %}
{% set dhcpconf = interface.serviceconf.dhcp %}
subnet {{ interface.cidr | ipaddr('network') }} netmask {{ interface.cidr | ipaddr('netmask') }} {
	range {{ dhcpconf.pool | ipaddr('1') | ipaddr('address') }} {{ dhcpconf.pool | ipaddr('-2') | ipaddr('address') }};
	default-lease-time {{ dhcpconf.default_lease_time | default(3600) }};
	max-lease-time {{ dhcpconf.max_lease_time | default(7200) }};
	option routers {{ dhcpconf.routers | default(interface.address) }};
	option domain-name "{{ interface.domain | default(sg_globalconf.domain) }}";
	option domain-name-servers {{ dhcpconf.dns | default(interface.address) }};
	option ntp-servers {{ dhcpconf.ntp | default(interface.address) }};
{% if dhcpconf.pxeboot_fname is defined %}
	filename "{{ dhcpconf.pxeboot_fname }}";
	next-server {{ dhcpconf.pxeboot_next | default(interface.address) }};
{% endif %}
}

group {
	# Gateway Interface
	host {{ sg_globalconf.hostname }} {
		hardware ethernet {{ hostvars[inventory_hostname]['ansible_' + interface.name]['macaddress'] }};
		fixed-address {{ interface.address }};
	}
}

{% if interface.hosts is defined %}
group {
{% for host in interface.hosts %}
	host {{ host.name }} {
		hardware ethernet {{ host.mac }};
		fixed-address {{ host.addr }};
      }
{% endfor %}
}
{% endif %}
{% endif %}
{% endfor %}
